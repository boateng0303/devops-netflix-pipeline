name: Deploy to EKS

on:
  workflow_run:
    workflows: ["Scan Image and Notify"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig \
          --region ${{ secrets.AWS_REGION }} \
          --name ${{ secrets.EKS_CLUSTER_NAME }}


    - name: Update deployment directly
      run: |
        IMAGE_URI="954108257389.dkr.ecr.us-east-1.amazonaws.com/netflix-app:${{ github.run_number }}"
        echo "Updating deployment image to: $IMAGE_URI"
        
        # Update the image directly in Kubernetes
        kubectl set image deployment/netflix-deployment netflix=$IMAGE_URI
        
        # Wait for the rollout
        kubectl rollout status deployment/netflix-deployment --timeout=300s
        
        # Verify the new image
        kubectl get deployment netflix-deployment -o jsonpath='{.spec.template.spec.containers[0].image}'


    - name: Deploy to EKS
      run: |
          kubectl apply -f Kubernetes_manifests/deployment.yaml
          kubectl apply -f Kubernetes_manifests/deployment.yaml

